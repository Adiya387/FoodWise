package com.example.healthyfoodai

import android.content.Context
import android.content.Intent
import android.os.Bundle
import android.widget.Button
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity
import com.google.firebase.auth.FirebaseAuth
import com.google.firebase.firestore.FirebaseFirestore

class AllergyActivity : AppCompatActivity() {

    private lateinit var btnNext: Button
    private lateinit var btnOtherAllergy: Button
    private lateinit var btnNoAllergy: Button

    private val selectedAllergies = mutableListOf<String>()
    private val auth = FirebaseAuth.getInstance()
    private val firestore = FirebaseFirestore.getInstance()

    private var isNoAllergySelected = false
    private var isOtherAllergySelected = false

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_allergy)

        btnOtherAllergy = findViewById(R.id.btnOtherAllergy)
        btnNoAllergy = findViewById(R.id.btnNoAllergy)
        btnNext = findViewById(R.id.btnNextAllergy)

        val buttons = listOf(
            R.id.btnMilk to "–ú–æ–ª–æ–∫–æ –∏ –º–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã",
            R.id.btnEggs to "–Ø–π—Ü–∞",
            R.id.btnNuts to "–û—Ä–µ—Ö–∏",
            R.id.btnGluten to "–ì–ª—é—Ç–µ–Ω",
            R.id.btnAlcohol to "–ê–ª–∫–æ–≥–æ–ª—å",
            R.id.btnFish to "–†—ã–±–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã",
            R.id.btnShellfish to "–ú–æ–ª–ª—é—Å–∫–∏, –∫—Ä–µ–≤–µ—Ç–∫–∏",
            R.id.btnSoy to "–°–æ—è",
            R.id.btnPeanuts to "–ê—Ä–∞—Ö–∏—Å",
            R.id.btnSugar to "–°–∞—Ö–∞—Ä"
        )

        btnNext.isEnabled = false

        buttons.forEach { (id, _) ->
            setButtonDefaultColor(findViewById(id))
        }
        setButtonDefaultColor(btnOtherAllergy)
        setButtonDefaultColor(btnNoAllergy)

        buttons.forEach { (id, allergyName) ->
            val button = findViewById<Button>(id)
            button.setOnClickListener {
                toggleSelection(button, allergyName)
                resetSpecialButtons()
            }
        }

        btnOtherAllergy.setOnClickListener {
            isOtherAllergySelected = true
            isNoAllergySelected = false
            highlightButtonSelected(btnOtherAllergy)
            setButtonDefaultColor(btnNoAllergy)

            val fragment = CustomAllergyFragment { customAllergy ->
                selectedAllergies.add(customAllergy)
                Toast.makeText(this, "–î–æ–±–∞–≤–ª–µ–Ω–æ: $customAllergy", Toast.LENGTH_SHORT).show()
                btnNext.isEnabled = true
            }
            supportFragmentManager.beginTransaction()
                .replace(R.id.fragment_container, fragment)
                .addToBackStack(null)
                .commit()
        }

        btnNoAllergy.setOnClickListener {
            selectedAllergies.clear()
            selectedAllergies.add("–ù–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π")
            isNoAllergySelected = true
            isOtherAllergySelected = false
            highlightButtonSelected(btnNoAllergy)
            setButtonDefaultColor(btnOtherAllergy)
            btnNext.isEnabled = true
        }

        btnNext.setOnClickListener {
            if (selectedAllergies.isEmpty()) {
                Toast.makeText(this, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –∏–ª–∏ —É–∫–∞–∂–∏—Ç–µ –≤—Ä—É—á–Ω—É—é", Toast.LENGTH_SHORT).show()
            } else {
                saveAllergies(selectedAllergies)
            }
        }
    }

    private fun toggleSelection(button: Button, allergy: String) {
        if (selectedAllergies.contains(allergy)) {
            selectedAllergies.remove(allergy)
            setButtonDefaultColor(button)
        } else {
            selectedAllergies.add(allergy)
            highlightButtonSelected(button)
        }
        btnNext.isEnabled = selectedAllergies.isNotEmpty()
    }

    private fun resetSpecialButtons() {
        isNoAllergySelected = false
        isOtherAllergySelected = false
        setButtonDefaultColor(btnOtherAllergy)
        setButtonDefaultColor(btnNoAllergy)
    }

    private fun highlightButtonSelected(button: Button) {
        button.setBackgroundTintList(getColorStateList(R.color.teal_700))
        button.setTextColor(getColor(android.R.color.white))
    }

    private fun setButtonDefaultColor(button: Button) {
        button.setBackgroundTintList(getColorStateList(R.color.gray))
        button.setTextColor(getColor(android.R.color.black))
    }

    private fun saveAllergies(allergies: List<String>) {
        val userId = auth.currentUser?.uid ?: return

        val prefs = applicationContext.getSharedPreferences("user_profile", Context.MODE_PRIVATE)

        val userProfile = hashMapOf(
            "name" to (prefs.getString("name", "") ?: ""),
            "gender" to (prefs.getString("gender", "") ?: ""),
            "age" to (prefs.getString("age", "")?.toIntOrNull() ?: 0),
            "height" to (prefs.getString("height", "") ?: ""),
            "weight" to (prefs.getString("weight", "") ?: ""),
            "goal" to (prefs.getString("goal", "") ?: ""),
            "activity" to (prefs.getString("activity", "") ?: ""),
            "allergies" to allergies
        )

        firestore.collection("users").document(userId).get()
            .addOnSuccessListener { doc ->
                val existingAllergies = (doc.get("allergies") as? List<*>)?.filterIsInstance<String>() ?: emptyList()

                if (existingAllergies.toSet() == allergies.toSet()) {
                    Toast.makeText(this, "–ò–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ", Toast.LENGTH_SHORT).show()
                    startActivity(Intent(this, ProfileCompleteActivity::class.java))
                    finish()
                    return@addOnSuccessListener
                }

                // –ï—Å–ª–∏ –∞–ª–ª–µ—Ä–≥–∏–∏ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å ‚Äî –æ–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –∏ —Å—Ç–∞–≤–∏–º —Ñ–ª–∞–≥
                firestore.collection("users").document(userId)
                    .set(userProfile)
                    .addOnSuccessListener {
                        Toast.makeText(this, "–ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω", Toast.LENGTH_SHORT).show()

                        // üíæ –°—Ç–∞–≤–∏–º —Ñ–ª–∞–≥ –¥–ª—è HomeFragment
//                        prefs.edit().putBoolean("show_ai_plan_update_dialog", true).apply()

                        startActivity(Intent(this, ProfileCompleteActivity::class.java))
                        finish()
                    }
                    .addOnFailureListener {
                        Toast.makeText(this, "–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è: ${it.message}", Toast.LENGTH_SHORT).show()
                    }
            }
            .addOnFailureListener {
                Toast.makeText(this, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è", Toast.LENGTH_SHORT).show()
            }
    }
}